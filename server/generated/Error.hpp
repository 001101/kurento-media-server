/* Autogenerated with Kurento Idl */

#ifndef __ERROR_HPP__
#define __ERROR_HPP__

#include <jsoncpp/json/json.h>
#include <JsonRpcException.hpp>
#include <memory>


class JsonSerializer;

namespace kurento {
class Error;
class MediaObject;
} /* kurento */

void Serialize(kurento::Error& event, JsonSerializer& s);

namespace kurento {

class Error
{

public:

  Error (std::shared_ptr<MediaObject> object, const std::string& description, int errorCode, const std::string& type) {
    this->object = object;
    this->description = description;
    this->errorCode = errorCode;
    this->type = type;
  };

  Error (const Json::Value &value);

  virtual void setObject (std::shared_ptr<MediaObject> object) {
    this->object = object;
  };

  virtual std::shared_ptr<MediaObject> getObject () {
    return object;
  };

  virtual void setDescription (std::string description) {
    this->description = description;
  };

  virtual const std::string& getDescription () {
    return description;
  };

  virtual void setErrorCode (int errorCode) {
    this->errorCode = errorCode;
  };

  virtual int getErrorCode () {
    return errorCode;
  };

  virtual void setType (std::string type) {
    this->type = type;
  };

  virtual const std::string& getType () {
    return type;
  };

  static std::string getName() {
    return "Error";
  }

protected:

  Error() {};

private:
  std::shared_ptr<MediaObject> object;
  std::string description;
  int errorCode;
  std::string type;

  friend void ::Serialize(Error& event, JsonSerializer& s);
};

} /* kurento */

#endif /*  __ERROR_HPP__ */
