/* Autogenerated with Kurento Idl */

#ifndef __MEDIA_SOURCE_HPP__
#define __MEDIA_SOURCE_HPP__

#include <jsoncpp/json/json.h>
#include <JsonRpcException.hpp>
#include <ObjectRegistrar.hpp>
#include <memory>
#include <vector>
#include "MediaPad.hpp"

namespace kurento {

class MediaSink;

class MediaSource : public virtual MediaPad {

public:

  MediaSource () {};
  virtual ~MediaSource () {};

  virtual std::vector<std::shared_ptr<MediaSink>> getConnectedSinks () {throw "Not implemented";};
  virtual void connect (std::shared_ptr<MediaSink> sink) {throw "Not implemented";};

  virtual std::string connect(const std::string &eventType, std::shared_ptr<EventHandler> handler);

  class Factory : public virtual kurento::Factory
  {
  public:
    Factory () {};

    virtual std::shared_ptr<MediaObject> createObject (const Json::Value
        &params);

    virtual std::string getName () {
      return "MediaSource";
    };

  private:


    class StaticConstructor
    {
    public:
      StaticConstructor();
    };

    static StaticConstructor staticConstructor;

  };

  class Invoker : public virtual MediaPad::Invoker
  {
  public:
    Invoker() {};
    virtual void invoke (std::shared_ptr<MediaObject> obj,
        const std::string &methodName, const Json::Value &params,
        Json::Value &response);
  };

  virtual MediaObject::Invoker &getInvoker() {
    return invoker;
  }

  private:
    Invoker invoker;

};

} /* kurento */

#endif /*  __MEDIA_SOURCE_HPP__ */
