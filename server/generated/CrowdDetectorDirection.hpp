/* Autogenerated with Kurento Idl */

#ifndef __CROWD_DETECTOR_DIRECTION_HPP__
#define __CROWD_DETECTOR_DIRECTION_HPP__

#include <jsoncpp/json/json.h>
#include <JsonRpcException.hpp>
#include <memory>

#include "Media.hpp"

class JsonSerializer;

namespace kurento {
class CrowdDetectorDirection;
} /* kurento */

void Serialize(kurento::CrowdDetectorDirection& event, JsonSerializer& s);

namespace kurento {

class CrowdDetectorDirection : public virtual Media
{

public:

  CrowdDetectorDirection (float directionAngle, const std::string& roiID, std::shared_ptr<MediaObject> source, const std::string& type) : Media (source, type) {
    this->directionAngle = directionAngle;
    this->roiID = roiID;
  };

  CrowdDetectorDirection (const Json::Value &value);

  virtual void setDirectionAngle (float directionAngle) {
    this->directionAngle = directionAngle;
  };

  virtual float getDirectionAngle () {
    return directionAngle;
  };

  virtual void setRoiID (std::string roiID) {
    this->roiID = roiID;
  };

  virtual const std::string& getRoiID () {
    return roiID;
  };

  static std::string getName() {
    return "CrowdDetectorDirection";
  }

protected:

  CrowdDetectorDirection() {};

private:
  float directionAngle;
  std::string roiID;

  friend void ::Serialize(CrowdDetectorDirection& event, JsonSerializer& s);
};

} /* kurento */

#endif /*  __CROWD_DETECTOR_DIRECTION_HPP__ */
