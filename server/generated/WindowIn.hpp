/* Autogenerated with Kurento Idl */

#ifndef __WINDOW_IN_HPP__
#define __WINDOW_IN_HPP__

#include <jsoncpp/json/json.h>
#include <JsonRpcException.hpp>
#include <memory>

#include "Media.hpp"

class JsonSerializer;

namespace kurento {
class WindowIn;
} /* kurento */

void Serialize(kurento::WindowIn& event, JsonSerializer& s);

namespace kurento {

class WindowIn : public virtual Media
{

public:

  WindowIn (const std::string& windowId, std::shared_ptr<MediaObject> source, const std::string& type) : Media (source, type) {
    this->windowId = windowId;
  };

  WindowIn (const Json::Value &value);

  virtual void setWindowId (std::string windowId) {
    this->windowId = windowId;
  };

  virtual const std::string& getWindowId () {
    return windowId;
  };

  static std::string getName() {
    return "WindowIn";
  }

protected:

  WindowIn() {};

private:
  std::string windowId;

  friend void ::Serialize(WindowIn& event, JsonSerializer& s);
};

} /* kurento */

#endif /*  __WINDOW_IN_HPP__ */
