/* Autogenerated with Kurento Idl */

#ifndef __MEDIA_HPP__
#define __MEDIA_HPP__

#include <jsoncpp/json/json.h>
#include <JsonRpcException.hpp>
#include <memory>


class JsonSerializer;

namespace kurento {
class Media;
class MediaObject;
} /* kurento */

void Serialize(kurento::Media& event, JsonSerializer& s);

namespace kurento {

class Media
{

public:

  Media (std::shared_ptr<MediaObject> source, const std::string& type) {
    this->source = source;
    this->type = type;
  };

  Media (const Json::Value &value);

  virtual void setSource (std::shared_ptr<MediaObject> source) {
    this->source = source;
  };

  virtual std::shared_ptr<MediaObject> getSource () {
    return source;
  };

  virtual void setType (std::string type) {
    this->type = type;
  };

  virtual const std::string& getType () {
    return type;
  };

  static std::string getName() {
    return "Media";
  }

protected:

  Media() {};

private:
  std::shared_ptr<MediaObject> source;
  std::string type;

  friend void ::Serialize(Media& event, JsonSerializer& s);
};

} /* kurento */

#endif /*  __MEDIA_HPP__ */
