/* Autogenerated with Kurento Idl */

#ifndef __MEDIA_TYPE_HPP__
#define __MEDIA_TYPE_HPP__

#include <jsoncpp/json/json.h>
#include <JsonRpcException.hpp>
#include <memory>

class JsonSerializer;

namespace kurento {
class MediaType;
} /*kurento */

void Serialize(std::shared_ptr<kurento::MediaType>& object, JsonSerializer& s);

namespace kurento {

class MediaType
{

public:

  typedef enum {
    AUDIO,
    DATA,
    VIDEO
  } type;

  MediaType (const std::string &type) {

    if (type ==  "AUDIO") {
      enumValue = AUDIO;
    }

    if (type ==  "DATA") {
      enumValue = DATA;
    }

    if (type ==  "VIDEO") {
      enumValue = VIDEO;
    }

  };

  MediaType (type value) {
    this->enumValue = value;
  }

  type getValue () {
    return enumValue;
  };

  std::string getString () {

    if (enumValue ==  AUDIO) {
      return "AUDIO";
    }

    if (enumValue ==  DATA) {
      return "DATA";
    }

    if (enumValue ==  VIDEO) {
      return "VIDEO";
    }

    return "";
  }

private:

  type enumValue;


  MediaType() {};

  friend void ::Serialize(std::shared_ptr<MediaType>& object, JsonSerializer& s);
};

} /* kurento */

#endif /*  __MEDIA_TYPE_HPP__ */
