/* Autogenerated with Kurento Idl */

#ifndef __PLATE_DETECTED_HPP__
#define __PLATE_DETECTED_HPP__

#include <jsoncpp/json/json.h>
#include <JsonRpcException.hpp>
#include <memory>

#include "Media.hpp"

class JsonSerializer;

namespace kurento {
class PlateDetected;
} /* kurento */

void Serialize(kurento::PlateDetected& event, JsonSerializer& s);

namespace kurento {

class PlateDetected : public virtual Media
{

public:

  PlateDetected (const std::string& plate, std::shared_ptr<MediaObject> source, const std::string& type) : Media (source, type) {
    this->plate = plate;
  };

  PlateDetected (const Json::Value &value);

  virtual void setPlate (std::string plate) {
    this->plate = plate;
  };

  virtual const std::string& getPlate () {
    return plate;
  };

  static std::string getName() {
    return "PlateDetected";
  }

protected:

  PlateDetected() {};

private:
  std::string plate;

  friend void ::Serialize(PlateDetected& event, JsonSerializer& s);
};

} /* kurento */

#endif /*  __PLATE_DETECTED_HPP__ */
