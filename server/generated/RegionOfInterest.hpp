/* Autogenerated with Kurento Idl */

#ifndef __REGION_OF_INTEREST_HPP__
#define __REGION_OF_INTEREST_HPP__

#include <jsoncpp/json/json.h>
#include <JsonRpcException.hpp>
#include <memory>

class JsonSerializer;

namespace kurento {
class RegionOfInterest;
} /*kurento */

void Serialize(std::shared_ptr<kurento::RegionOfInterest>& object, JsonSerializer& s);

namespace kurento {
class Point;

class RegionOfInterestConfig;


class RegionOfInterest
{

public:

  RegionOfInterest (const std::vector<std::shared_ptr<Point>>& points, std::shared_ptr<RegionOfInterestConfig> regionOfInterestConfig, const std::string& id){
    this->points = points;
    this->regionOfInterestConfig = regionOfInterestConfig;
    this->id = id;
  };

  RegionOfInterest (const Json::Value &value);

  void setPoints (const std::vector<std::shared_ptr<Point>>& points) {
    this->points = points;
  };

  std::vector<std::shared_ptr<Point>> getPoints () {
    return points;
  };

  void setRegionOfInterestConfig (std::shared_ptr<RegionOfInterestConfig> regionOfInterestConfig) {
    this->regionOfInterestConfig = regionOfInterestConfig;
  };

  std::shared_ptr<RegionOfInterestConfig> getRegionOfInterestConfig () {
    return regionOfInterestConfig;
  };

  void setId (const std::string& id) {
    this->id = id;
  };

  std::string getId () {
    return id;
  };

private:
  std::vector<std::shared_ptr<Point>> points;
  std::shared_ptr<RegionOfInterestConfig> regionOfInterestConfig;
  std::string id;

  RegionOfInterest() {};

  friend void ::Serialize(std::shared_ptr<RegionOfInterest>& object, JsonSerializer& s);
};

} /* kurento */

#endif /*  __REGION_OF_INTEREST_HPP__ */
