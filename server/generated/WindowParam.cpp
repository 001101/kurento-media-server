/* Autogenerated with Kurento Idl */

#include "WindowParam.hpp"
#include <JsonSerializer.hpp>

namespace kurento {


WindowParam::WindowParam (const Json::Value &value) {
  Json::Value aux;

  if (value.isMember ("topRightCornerX")) {
    aux = value["topRightCornerX"];

    if (!aux.isInt ()) {
      /* param 'topRightCornerX' has invalid type value, raise exception */
      JsonRpc::CallException e (JsonRpc::ErrorCode::SERVER_ERROR_INIT,
                                "'topRightCornerX' parameter should be a integer");
      throw e;
    }

    topRightCornerX = aux.asInt ();
  } else {
    /* Requiered property 'topRightCornerX' not present, raise exception */
    JsonRpc::CallException e (JsonRpc::ErrorCode::SERVER_ERROR_INIT,
                              "'topRightCornerX' property is requiered");
    throw e;
  }

  if (value.isMember ("topRightCornerY")) {
    aux = value["topRightCornerY"];

    if (!aux.isInt ()) {
      /* param 'topRightCornerY' has invalid type value, raise exception */
      JsonRpc::CallException e (JsonRpc::ErrorCode::SERVER_ERROR_INIT,
                                "'topRightCornerY' parameter should be a integer");
      throw e;
    }

    topRightCornerY = aux.asInt ();
  } else {
    /* Requiered property 'topRightCornerY' not present, raise exception */
    JsonRpc::CallException e (JsonRpc::ErrorCode::SERVER_ERROR_INIT,
                              "'topRightCornerY' property is requiered");
    throw e;
  }

  if (value.isMember ("width")) {
    aux = value["width"];

    if (!aux.isInt ()) {
      /* param 'width' has invalid type value, raise exception */
      JsonRpc::CallException e (JsonRpc::ErrorCode::SERVER_ERROR_INIT,
                                "'width' parameter should be a integer");
      throw e;
    }

    width = aux.asInt ();
  } else {
    /* Requiered property 'width' not present, raise exception */
    JsonRpc::CallException e (JsonRpc::ErrorCode::SERVER_ERROR_INIT,
                              "'width' property is requiered");
    throw e;
  }

  if (value.isMember ("height")) {
    aux = value["height"];

    if (!aux.isInt ()) {
      /* param 'height' has invalid type value, raise exception */
      JsonRpc::CallException e (JsonRpc::ErrorCode::SERVER_ERROR_INIT,
                                "'height' parameter should be a integer");
      throw e;
    }

    height = aux.asInt ();
  } else {
    /* Requiered property 'height' not present, raise exception */
    JsonRpc::CallException e (JsonRpc::ErrorCode::SERVER_ERROR_INIT,
                              "'height' property is requiered");
    throw e;
  }

}

} /* kurento */

void
Serialize(std::shared_ptr<kurento::WindowParam>& object, JsonSerializer& s)
{
  if (!s.IsWriter && !object) {
    object.reset(new kurento::WindowParam());
  }

  if (object) {
    s.Serialize("topRightCornerX", object->topRightCornerX);
    s.Serialize("topRightCornerY", object->topRightCornerY);
    s.Serialize("width", object->width);
    s.Serialize("height", object->height);
  }

  if (!s.IsWriter) {

  }

}
