### BEGIN INIT INFO
# Provides:          kurentod
# Required-Start:    $remote_fs $network
# Required-Stop:     $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Kurento Media Server daemon
### END INIT INFO

if [ -r "/lib/lsb/init-functions" ]; then
  . /lib/lsb/init-functions
else
  echo "E: /lib/lsb/init-functions not found, package lsb-base needed"
  exit 1
fi

# Variables
PID_FILE=/var/run/kurento.pid
DAEMON_CMD=/usr/bin/kurento
START_DAEMON=false
DAEMON_LOG=/var/log/kurento
LOG_SIZE=10M

# Include stun defaults if available
if [ -f /etc/default/kurento ] ; then
	. /etc/default/kurento
fi

if [ "$START_DAEMON" != "true" ]; then
    log_failure_msg "Review activate settings within file /etc/default/kurento"
    exit 1
fi

if [ ! -x $DAEMON_CMD ]; then
    log_failure_msg "$DAEMON_CMD does not have execution permission"
    exit 1
fi

verify_user () {
# Only root can start Kurento
    if [ `id -u` -ne 0 ]; then
        log_failure_msg "Only root can start Kurento"
        exit 1
    fi
}

start_kurento () {

    verify_user

    # Verify pid file directory exists
    if [ ! -e /var/run ]; then
        install -d -m755 /var/run || { log_failure_msg "Unable to access /var/run directory"; exit 1; }
    fi
    # Verify log directory exists
    if [ ! -e $DAEMON_LOG ]; then
        install -d -o$DAEMON_USER -m755 $DAEMON_LOG || { log_failure_msg "Unable to access $DAEMON_LOG"; exit 1; }
    fi
    # Make sure the directory belongs to $DAEMON_USER
    sudo -u $DAEMON_USER -H [ -O $DAEMON_LOG ]
    if [ $? != 0 ]; then
        chown $DAEMON_USER $DAEMON_LOG || { log_failure_msg "Unable to access $DAEMON_LOG"; exit 1; }
    fi
    /sbin/start-stop-daemon --start --exec $DAEMON_CMD --pidfile "$PID_FILE" \
        --chuid $DAEMON_USER --background --no-close --make-pidfile 1>>"$DAEMON_LOG/kurento.log" 2>&1
    if [ $? != 0 ]; then
        log_failure_msg "Kurento Media Server already started"
        exit 1
    fi

    # Add file rotation
    [ -e /etc/logrotate.d ] || install -d -m755 /etc/logrotate.d
    cat > /etc/logrotate.d/kurento  <<- EOFile
    "/var/log/kurento/*.log" {
        missingok
        copytruncate
        rotate 20
        size $LOG_SIZE
        compress
        notifempty
        sharedscripts
    }
EOFile

    # Add logrotate cron to root user
    echo "`crontab -u root -l`"|grep -iv "kurento"|crontab -u root -
    echo "*/5 * * * * /usr/sbin/logrotate /etc/logrotate.d/kurento" | crontab -u root -

}

stop_kurento () {
    verify_user

    /sbin/start-stop-daemon --stop --exec $DAEMON_CMD --pidfile "$PID_FILE"

    if [ $? != 0 ]; then
        log_failure_msg "Kurento Media Server not running"
        exit 1
    fi
    rm -f $PID_FILE

    # Remove logrotate cron to root user
    echo "`crontab -u root -l`"|grep -iv "kurento"|crontab -u root -

}

status () {
    log_action_begin_msg "checking Kurento Media Server"
    if pidofproc -p $PID_FILE >/dev/null ; then
        log_action_end_msg 0 "running"
    else
        if [ -e "$PID_FILE" ]; then
            log_action_end_msg 1 "$DAEMON_CMD failed"
        else
            log_action_end_msg 0 "not running"
        fi
    fi
}

case "$1" in
  start)
    log_daemon_msg "Starting Kurento Media Server"
    start_kurento
    log_end_msg $?;
    ;;

  stop)
    log_daemon_msg "Stop Kurento Media Server daemon";
    stop_kurento
    log_end_msg $?;
    ;;

  restart)
    $0 stop
    $0 start
    ;;

  force-reload)
    $0 stop
    $0 start
    ;;

  status)
    status
    ;;

  *)
    echo "Usage: $0 {start|stop|restart|status}" >&2
    exit 3
    ;;
esac

exit 0
